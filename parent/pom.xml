<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<prerequisites>
		<maven>3.0</maven>
	</prerequisites>

	<groupId>jp.pizzafactory.model.asam</groupId>
	<artifactId>parent</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>EMF Plugins for ASAM Specified Models</name>

	<licenses>
		<license>
			<name>Eclipse Public License 1.0</name>
			<url>https://www.eclipse.org/legal/epl-v10.html</url>
		</license>
	</licenses>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<tycho-version>0.22.0</tycho-version>
		<tycho-extras-version>0.22.0</tycho-extras-version>
		<tycho-groupid>org.eclipse.tycho</tycho-groupid>
		<pizzafactory-version>8.5</pizzafactory-version>
		<github.global.oauth2Token>${env.GH_TOKEN}</github.global.oauth2Token>
		<jacoco.destFile>${basedir}/../build-target/target/jacoco.exec</jacoco.destFile>
		<sonar.jacoco.reportPath>${basedir}/../build-target/target/jacoco.exec</sonar.jacoco.reportPath>
	</properties>

	<scm>
		<connection>scm:git:git://git@bitbucket.org:pizzafactory/model-asam.git</connection>
	</scm>

	<modules>
		<module>../build-target</module>
		<module>../jp.pizzafactory.model.asam</module>
		<module>../jp.pizzafactory.model.asam.cc</module>
		<module>../jp.pizzafactory.model.asam.cc.edit</module>
		<module>../jp.pizzafactory.model.asam.cc.editor</module>
		<!-- <module>../jp.pizzafactory.model.asam.cc.tests</module> -->
		<module>../jp.pizzafactory.model.asam.core</module>
		<module>../jp.pizzafactory.model.asam.core.tests</module>
		<module>../jp.pizzafactory.model.asam.cc.objstore</module>
		<module>../jp.pizzafactory.model.asam.cc.objstore.tests</module>
		<module>../jp.pizzafactory.model.asam.ide</module>
		<module>../jp.pizzafactory.model.asam.ui</module>
		<module>../p2update</module>
	</modules>

	<repositories>
		<repository>
			<id>Luna</id>
			<name>Luna</name>
			<url>http://download.eclipse.org/releases/luna/</url>
			<layout>p2</layout>
		</repository>
		<repository>
			<id>aether-core</id>
			<name>Aether core</name>
			<url>http://download.eclipse.org/aether/aether-core/releases/</url>
			<layout>p2</layout>
		</repository>
		<repository>
			<id>maven-aether-provider</id>
			<name>Maven Aether provider</name>
			<url>http://download.eclipse.org/aether/maven-aether-provider/releases/</url>
			<layout>p2</layout>
		</repository>
		<repository>
			<id>orbit</id>
			<name>Orbit</name>
			<url>http://download.eclipse.org/tools/orbit/downloads/drops/R20150124073747/repository/</url>
			<layout>p2</layout>
		</repository>
		<repository>
			<id>Sphinx</id>
			<name>Sphinx</name>
			<url>http://download.eclipse.org/sphinx/releases/0.10.x</url>
			<layout>p2</layout>
		</repository>
	</repositories>

	<build>
		<plugins>
			<plugin>
				<groupId>${tycho-groupid}</groupId>
				<artifactId>target-platform-configuration</artifactId>
				<version>${tycho-version}</version>
				<configuration>
					<resolver>p2</resolver>
					<pomDependencies>consider</pomDependencies>
					<environments>
						<environment>
							<os>win32</os>
							<ws>win32</ws>
							<arch>x86</arch>
						</environment>
						<environment>
							<os>win32</os>
							<ws>win32</ws>
							<arch>x86_64</arch>
						</environment>
						<environment>
							<os>linux</os>
							<ws>gtk</ws>
							<arch>x86</arch>
						</environment>
						<environment>
							<os>linux</os>
							<ws>gtk</ws>
							<arch>x86_64</arch>
						</environment>
						<environment>
							<os>macosx</os>
							<ws>cocoa</ws>
							<arch>x86_64</arch>
						</environment>
					</environments>
					<target>
						<artifact>
							<artifactId>product-target</artifactId>
						</artifact>
					</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>${tycho-groupid}</groupId>
				<artifactId>tycho-maven-plugin</artifactId>
				<version>${tycho-version}</version>
				<extensions>true</extensions>
			</plugin>


			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.8</version>
				<configuration>
					<!-- Default configuration for all reports -->
				</configuration>
				<executions>
					<execution>
						<id>aggregate</id>
						<goals>
							<goal>aggregate</goal>
						</goals>
						<phase>site</phase>
						<configuration>
							<!-- Specific configuration for the aggregate report -->
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>${tycho-groupid}</groupId>
				<artifactId>tycho-versions-plugin</artifactId>
				<version>${tycho-version}</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.2.1</version>
			</plugin>

			<!-- Testing -->
			<plugin>
				<groupId>${tycho-groupid}</groupId>
				<artifactId>tycho-surefire-plugin</artifactId>
				<version>${tycho-version}</version>
				<configuration>
					<useUIHarness>false</useUIHarness>
					<includes>
						<include>**/*Test.java</include>
					</includes>
					<!-- Kill test JVM if tests take more than 10 minutes (600 seconds) 
						to finish -->
					<forkedProcessTimeoutInSeconds>600</forkedProcessTimeoutInSeconds>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.4</version>
				<configuration>
					<locales>en,ja</locales>
					<inputEncoding>UTF-8</inputEncoding>
					<outputEncoding>UTF-8</outputEncoding>
					<reportPlugins>
						<!-- Project Info -->
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-project-info-reports-plugin</artifactId>
							<version>2.7</version>
							<reportSets>
								<reportSet>
									<reports>
										<report>index</report>
										<report>license</report>
										<!-- <report>dependencies</report> <report>dependency-convergence</report> 
											<report>dependency-management</report> <report>plugins</report> <report>plugin-management</report> 
											<report>cim</report> <report>issue-tracking</report> <report>mailing-list</report> 
											<report>project-team</report> <report>scm</report> <report>summary</report> -->
									</reports>
								</reportSet>
							</reportSets>
						</plugin>
					</reportPlugins>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.1</version>
				<configuration>
					<altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
				</configuration>
			</plugin>

			<plugin>
				<groupId>com.github.github</groupId>
				<artifactId>site-maven-plugin</artifactId>
				<version>0.12</version>
				<configuration>
					<message>Maven artifacts for ${project.version}</message>
					<noJekyll>true</noJekyll>
					<outputDirectory>${project.build.directory}/mvn-repo</outputDirectory>
					<branch>refs/heads/gh-pages</branch>
					<repositoryName>model-asam</repositoryName>
					<repositoryOwner>PizzaFactory</repositoryOwner>
					<merge>true</merge>
				</configuration>
				<executions>
					<!-- run site-maven-plugin's 'site' target as part of the build's normal 
						'deploy' phase -->
					<execution>
						<id>m2repo</id>
						<configuration>
							<includes>
								<include>**/*</include>
							</includes>
							<path>m2repo</path>
						</configuration>
						<goals>
							<goal>site</goal>
						</goals>
						<phase>deploy</phase>
					</execution>
					<execution>
						<id>site</id>
						<goals>
							<goal>site</goal>
						</goals>
						<phase>site</phase>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.5.201505241946</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>2.3</version>
				</plugin>

				<plugin>
					<groupId>${tycho-groupid}</groupId>
					<artifactId>tycho-packaging-plugin</artifactId>
					<version>${tycho-extras-version}</version>
					<dependencies>
						<dependency>
							<groupId>org.eclipse.tycho.extras</groupId>
							<artifactId>tycho-buildtimestamp-jgit</artifactId>
							<version>${tycho-version}</version>
						</dependency>
					</dependencies>
					<configuration>
						<strictBinIncludes>false</strictBinIncludes>
						<format>'v'yyyyMMdd-HHmm</format>
						<timestampProvider>jgit</timestampProvider>
						<jgit.ignore>
							pom.xml
						</jgit.ignore>
					</configuration>
				</plugin>

			</plugins>
		</pluginManagement>
	</build>

	<distributionManagement>
		<repository>
			<id>internal.repo</id>
			<name>Temporary Staging Repository</name>
			<url>file://${project.build.directory}/mvn-repo</url>
		</repository>
	</distributionManagement>

</project>
